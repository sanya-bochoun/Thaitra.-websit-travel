const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(express.json());

// р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н MongoDB local
mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
  .then(() => console.log('тЬЕ [MongoDB] р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н MongoDB (local) р╕кр╕│р╣Ар╕гр╣Зр╕И! ЁЯЪА'))
  .catch(err => console.error('тЭМ [MongoDB] р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н MongoDB р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:', err));

const TourSearch = require('./models/TourSearch');
const Contact = require('./models/Contact');

// API р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╣Йр╕Щр╕лр╕▓р╕Чр╕▒р╕зр╕гр╣М
app.post('/api/tour-search', async (req, res) => {
  try {
    const tour = new TourSearch(req.body);
    await tour.save();
    res.status(201).json(tour);
  } catch (err) {
    res.status(400).json({ error: err.message });
  }
});

// API р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╣Йр╕Щр╕лр╕▓р╕Чр╕▒р╕зр╕гр╣Мр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
app.get('/api/tour-search', async (req, res) => {
  try {
    const tours = await TourSearch.find().sort({ createdAt: -1 });
    res.json(tours);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// API р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕┤р╕Фр╕Хр╣Ир╕н
app.post('/api/contact', async (req, res) => {
  try {
    const contact = new Contact(req.body);
    await contact.save();
    res.status(201).json(contact);
  } catch (err) {
    res.status(400).json({ error: err.message });
  }
});

// API р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
app.get('/api/contact', async (req, res) => {
  try {
    const contacts = await Contact.find().sort({ createdAt: -1 });
    res.json(contacts);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З API
app.get('/', (req, res) => {
  res.send('API р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ');
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`ЁЯМР [Server] Server р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Чр╕╡р╣И http://localhost:${PORT} тЪбя╕П`)); 